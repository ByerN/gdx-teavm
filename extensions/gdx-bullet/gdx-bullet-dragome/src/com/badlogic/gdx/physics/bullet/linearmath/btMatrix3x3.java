/*-------------------------------------------------------
 * This file was automatically generated by XpeCodeGen
 *
 * Dont make changes to this file
 *-------------------------------------------------------*/
package com.badlogic.gdx.physics.bullet.linearmath;

import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.physics.bullet.BulletBase;

/** @author xpenatan */
public class btMatrix3x3 extends BulletBase {

    public btMatrix3x3() {
        resetObj(createNative(), true);
    }

    private static long createNative() {
		return com.dragome.commons.javascript.ScriptHelper.evalLong("Bullet.getPointer(new Bullet.btMatrix3x3());",null);
    }

	protected void cacheObj() {
		com.dragome.commons.javascript.ScriptHelper.evalNoResult("this.$$$jsObj=Bullet.wrapPointer(this.$$$cPointer,Bullet.btMatrix3x3);",this);
	}

    @Override
    protected void delete() {
		long addr = cPointer;
		com.dragome.commons.javascript.ScriptHelper.evalNoResult("var mat=Bullet.wrapPointer(addr,Bullet.btMatrix3x3);Bullet.destroy(mat);",this);
    }

    public static void set(btMatrix3x3 mat, float[] value) {
		mat.checkPointer();
		Object mat3 = mat.jsObj;
		com.dragome.commons.javascript.ScriptHelper.evalNoResult("mat3.setValue(value[0],value[3],value[6],value[1],value[4],value[7],value[2],value[5],value[8]);",null);
    }

    public static void get(btMatrix3x3 mat, float[] value) {
		mat.checkPointer();
		Object mat3 = mat.jsObj;
		com.dragome.commons.javascript.ScriptHelper.evalNoResult("value[0]=mat3.getColumn(0).getX();value[1]=mat3.getColumn(0).getY();value[2]=mat3.getColumn(0).getZ();value[3]=mat3.getColumn(1).getX();value[4]=mat3.getColumn(1).getY();value[5]=mat3.getColumn(1).getZ();value[6]=mat3.getColumn(2).getX();value[7]=mat3.getColumn(2).getY();value[8]=mat3.getColumn(2).getZ();",null);
    }

    public static void set(Matrix3 in, btMatrix3x3 out) {
		out.checkPointer();
		btMatrix3x3.set(out, in.val);
    }

    public static void get(btMatrix3x3 in, Matrix3 out) {
		in.checkPointer();
		btMatrix3x3.get(in, out.val);
    }
}
